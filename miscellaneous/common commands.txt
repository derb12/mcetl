To bump the version:
1)	Navigate to the project folder (mcetl)
2)	python -m  bumpversion [version]
where [version] is major if moving from 1.0.0 to 2.0.0, minor if moving from 1.0.0 to 1.1.0, and patch if moving from 1.0.0 to 1.0.1.

To create local documentation:
1)	Navigate to docs folder (mcetl/docs)
2)	make [target]
where [target] could be any valid Sphinx build option, such as clean (which cleans the _build folder), html, latex, etc.

To output the git commits to a file to create a new changelog entry, using custom python program:
1)	Navigate to the project folder (mcetl)
2)	python miscellaneous/parse_gitlog.py  --start-date=[date] 
where [date] is the date of the last released version, input as "2020-11-08", "11-08", or "8".
Other options can be included: --branch=main --log-file=git_log.txt --keep-log
Use:
	python miscellaneous/parse_gitlog.py -h
to get help for its usage.

To output the git changes for the development branch to a file, using git:
1)	Navigate to the project folder (mcetl)
2)	git log [branch] --format="%s%n%b"  --after=[date] > git_log.txt
where [date] is the date of the last released version as YYYY-MM-DD, eg. "2020-11-08"
and [branch] is the git branch to log, eg. development or main (can also be like "main")
%s is the commit title, %n is newline, and %b is the commit body, if one was given.

To create the .tar.gz file and the wheel for uploading to pypi:
1)	Navigate to the project folder (mcetl)
2)	python setup.py sdist bdist_wheel

To upload to pypi:
1)	Navigate to the project folder (mcetl)
2)	python -m twine upload dist/*

To investigate import timing:
1)	python -X importtime -c "import [module]" 2> [log file]
where [module] is what needs imported, such as mcetl, and [log file] is the output log name, such as mcetl.log
2)	tuna [log file]
tuna is a library available by installing from pypi. It makes a nice display of the output from step 1).

To create pdf from documentation using rinoh (installed with pip install rinohtype):
1)	Navigate to docs folder (mcetl/docs)
2)	make rinoh
(alternatively, can type: sphinx-build -b rinoh . _build/rinoh)
Note: rinoh does not work with the autoapi extension. Also, the pdf does not have indices, unlike the one from readthedocs.
