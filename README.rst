=====
mcetl
=====

.. image:: https://github.com/derb12/mcetl/raw/master/docs/logo.png
   :align: center


.. image:: https://img.shields.io/pypi/v/mcetl.svg
        :target: https://pypi.python.org/pypi/mcetl

.. image:: https://readthedocs.org/projects/mcetl/badge/?version=latest
        :target: https://mcetl.readthedocs.io/en/latest/?badge=latest
        :alt: Documentation Status

.. image:: https://img.shields.io/badge/License-BSD%203--Clause-blue.svg
        :target: https://github.com/derb12/mcetl/tree/master/LICENSE.txt



mcetl is a simple Extract-Transform-Load framework focused on materials characterization.

* For python 3.7+
* Open Source: BSD 3-clause license
* Documentation: https://mcetl.readthedocs.io.


.. contents:: **Table of Contents**
    :depth: 1


Summary
-------

* TODO


Installation
------------

Stable release
~~~~~~~~~~~~~~

To install mcetl, run this command in your terminal:

.. code-block:: console

    $ pip install mcetl

This is the preferred method to install mcetl, as it will always install the most recent stable release.


From Github
~~~~~~~~~~~

The sources for mcetl can be downloaded from the `Github repo`_.

You can clone the public repository:

.. code-block:: console

    $ git clone git://github.com/derb12/mcetl


Once you have a copy of the source, you can install it with:

.. code-block:: console

    $ python setup.py install


.. _Github repo: https://github.com/derb12/mcetl


Usage
-----

To use mcetl in a project::

    import mcetl


Peak Fitting
~~~~~~~~~~~~

To use the peak fitting module in mcetl, simply do::

    mcetl.launch_peak_fitting_gui()


A window will then appear to select the data file(s) to be fit and the Excel file for saving the results. No other setup is required for doing peak fitting.

After doing peak fitting, the peak fitting results and plots will be saved to Excel.


Plotting
~~~~~~~~

To use the plotting module in mcetl, simply do::

    mcetl.launch_plotting_gui()


Similar to peak fitting, a window will then appear to select the data file(s) to be plotted, and no other setup is required for doing plotting.


When plotting, the image of the plots can be saved to all formats supported by matplotlib, 
including tiff, jpg, png, svg, and pdf.


In addition, the layout of the plots can be saved to apply to other figures later, and the data for the plots can be saved so that the entire plot can be recreated.


To reopen a figure saved through mcetl, do::

    mcetl.load_previous_figure()


Main GUI
~~~~~~~~

The main GUI for mcetl contains options for processing data, peak fitting, plotting, writing data to Excel, and moving files.

Before using the main GUI, DataSource objects must be created. Each DataSource contains the information for reading files for that DataSource (such as what separator to use, which rows and columns to use, labels for the columns, etc.), the calculations that will be performed on the data, and the options for writing the data to Excel (formatting, placement in the worksheet, etc.).

For more information on creating a DataSource object, refer to the `example program`_ that shows how to use the main gui.


.. _example program: https://github.com/derb12/mcetl/tree/master/examples


Generating Example Data
~~~~~~~~~~~~~~~~~~~~~~~

Files for example data from characterization techniques can be created using::

    from mcetl import raw_data
    raw_data.generate_raw_data()


Data produced by the generate_raw_data function covers the following characterization techniques:

* X-ray diffraction (XRD)
* Fourier-transform infrared spectroscopy (FTIR)
* Raman spectroscopy
* Thermogravimetric analysis (TGA)
* Differential scanning calorimetry (DSC)


Example Programs
~~~~~~~~~~~~~~~~

`Example programs`_  are available to show basic usage of mcetl. The examples include:

* Generating raw data
* Using the main GUI
* Using the peak fitting GUI
* Using the plotting GUI
* Reopening a figure saved with the plotting GUI


The example program for using the main GUI contains all necessary inputs for processing the example raw data generated by the generate_raw_data function as described above and is an excellent resource for creating new DataSource objects.


.. _Example programs: https://github.com/derb12/mcetl/tree/master/examples


Changing GUI Colors
~~~~~~~~~~~~~~~~~~~

All user interfaces are created using PySimpleGUI, which allows easily changing the theme of the GUIs.
To change the GUI theme, simply do::

    import PySimpleGUI as sg
    sg.theme('darkblue10')


which changes the theme to use PySimpleGUI's 'darkblue10' theme.

Additionally, mcetl colors the button for moving onto the next window with a specific color scheme for all windows.
To change this button's colors, do::

    from mcetl import utils
    utils.PROCEED_COLOR = ('white', 'green')


which makes the button use white text with a green background. Valid inputs for PROCEED_COLOR are color strings supported
by PySimpleGUI, including hex colors such as '#F9B381'.


Future Plans
------------

Planned features for later releases:

Short term
~~~~~~~~~~

* Develop tests for all modules in the package.
* Switch from print statements to logging.
* Simplify file searching and make it more flexible.
* Transfer documentation from PDF/Word files to automatic documentation with Sphinx.
* Improve usage when opening existing Excel files.


Long term
~~~~~~~~~

* Add more plot types to the plotting gui, including bar charts, categorical plots, and 3d plots.
* Make peak fitting more flexible by allowing more options or user inputs.
* Improve overall look and usability of all GUIs.


Contributing
------------

Contributions are welcomed and greatly appreciated. For information on submitting bug reports, pull requests, or general feedback, please refer to the 'contributing guide'_.

.. _`contributing guide`: https://github.com/derb12/mcetl/tree/master/docs/contributing.rst


Changelog
---------

Refer to the changelog_ for information on mcetl's changes.

.. _changelog: https://github.com/derb12/mcetl/tree/master/CHANGELOG.rst


License
-------

mcetl is available under the BSD 3-clause license. For more information, refer to the license_.

.. _license: https://github.com/derb12/mcetl/tree/master/LICENSE.txt


Author
------

* Donald Erb <donnie.erb@gmail.com>


Credits
-------

The layout of this package was initially created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.


.. _Cookiecutter: https://github.com/audreyr/cookiecutter

.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage

